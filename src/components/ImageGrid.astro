---
import cloudinary from "../lib/cloudinary";
import CldImage from "./CldImage.astro";
import { cn } from "../lib/utils";
const { resources: images } = await cloudinary.v2.search
    .expression(`folder:${import.meta.env.CLOUDINARY_FOLDER}/*`)
    .sort_by("uploaded_at", "desc")
    .max_results(20)
    .execute();
interface Props {
    filename: string;
}
const { filename: selected } = Astro.props;
const selectedImage = images.find(({ filename }) => filename === selected);
const currentIndex = images.indexOf(selectedImage);
---

<div class="@container flex flex-wrap">
    <p class="text-4xl font-bold text-foreground">{currentIndex}</p>
    {
        selectedImage && (
            <div>
                <div
                    style={{
                        viewTransitionName: `images-${selectedImage.filename}`,
                    }}
                >
                    <CldImage
                        alt=""
                        active
                        src={selectedImage.public_id}
                        class="object-contain max-h-screen w-full h-screen"
                    />
                </div>

                <div class="flex justify-center gap-2">
                    {images.map(({ filename, public_id }) => (
                        <a
                            class={cn(
                                "w-1/12",
                                filename === selected && "border-red-500 border"
                            )}
                            style={{
                                viewTransitionName: `images-${filename}`,
                            }}
                            href={`/full/${filename.toString()}`}
                        >
                            <CldImage active={false} alt="" src={public_id} />
                        </a>
                    ))}
                </div>
            </div>
        )
    }
</div>
